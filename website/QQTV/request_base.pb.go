// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.21.4
// source: request_base.proto

package QQTV

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UISizeType int32

const (
	UISizeType_UISizeType_REGULAR   UISizeType = 0
	UISizeType_UISizeType_LARGE     UISizeType = 1
	UISizeType_UISizeType_HUGE      UISizeType = 2
	UISizeType_UISizeType_MAXIMIZE  UISizeType = 3
	UISizeType_UISizeType_XMAXIMIZE UISizeType = 4
)

// Enum value maps for UISizeType.
var (
	UISizeType_name = map[int32]string{
		0: "UISizeType_REGULAR",
		1: "UISizeType_LARGE",
		2: "UISizeType_HUGE",
		3: "UISizeType_MAXIMIZE",
		4: "UISizeType_XMAXIMIZE",
	}
	UISizeType_value = map[string]int32{
		"UISizeType_REGULAR":   0,
		"UISizeType_LARGE":     1,
		"UISizeType_HUGE":      2,
		"UISizeType_MAXIMIZE":  3,
		"UISizeType_XMAXIMIZE": 4,
	}
)

func (x UISizeType) Enum() *UISizeType {
	p := new(UISizeType)
	*p = x
	return p
}

func (x UISizeType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UISizeType) Descriptor() protoreflect.EnumDescriptor {
	return file_request_base_proto_enumTypes[0].Descriptor()
}

func (UISizeType) Type() protoreflect.EnumType {
	return &file_request_base_proto_enumTypes[0]
}

func (x UISizeType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UISizeType.Descriptor instead.
func (UISizeType) EnumDescriptor() ([]byte, []int) {
	return file_request_base_proto_rawDescGZIP(), []int{0}
}

type SafeInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type       int32  `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`
	SafeKey    string `protobuf:"bytes,2,opt,name=safe_key,json=safeKey,proto3" json:"safe_key,omitempty"`
	SafeResult []byte `protobuf:"bytes,3,opt,name=safe_result,json=safeResult,proto3" json:"safe_result,omitempty"`
}

func (x *SafeInfo) Reset() {
	*x = SafeInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_request_base_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SafeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SafeInfo) ProtoMessage() {}

func (x *SafeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_request_base_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SafeInfo.ProtoReflect.Descriptor instead.
func (*SafeInfo) Descriptor() ([]byte, []int) {
	return file_request_base_proto_rawDescGZIP(), []int{0}
}

func (x *SafeInfo) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *SafeInfo) GetSafeKey() string {
	if x != nil {
		return x.SafeKey
	}
	return ""
}

func (x *SafeInfo) GetSafeResult() []byte {
	if x != nil {
		return x.SafeResult
	}
	return nil
}

type LoginToken struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId       string `protobuf:"bytes,1,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	Type        int32  `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`
	Account     string `protobuf:"bytes,3,opt,name=account,proto3" json:"account,omitempty"`
	Token       []byte `protobuf:"bytes,4,opt,name=token,proto3" json:"token,omitempty"`
	IsMainLogin bool   `protobuf:"varint,5,opt,name=is_main_login,json=isMainLogin,proto3" json:"is_main_login,omitempty"`
}

func (x *LoginToken) Reset() {
	*x = LoginToken{}
	if protoimpl.UnsafeEnabled {
		mi := &file_request_base_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginToken) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginToken) ProtoMessage() {}

func (x *LoginToken) ProtoReflect() protoreflect.Message {
	mi := &file_request_base_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginToken.ProtoReflect.Descriptor instead.
func (*LoginToken) Descriptor() ([]byte, []int) {
	return file_request_base_proto_rawDescGZIP(), []int{1}
}

func (x *LoginToken) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *LoginToken) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *LoginToken) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *LoginToken) GetToken() []byte {
	if x != nil {
		return x.Token
	}
	return nil
}

func (x *LoginToken) GetIsMainLogin() bool {
	if x != nil {
		return x.IsMainLogin
	}
	return false
}

type LocationInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type        int32   `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`
	Latitude    float32 `protobuf:"fixed32,2,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude   float32 `protobuf:"fixed32,3,opt,name=longitude,proto3" json:"longitude,omitempty"`
	Accuracy    float64 `protobuf:"fixed64,4,opt,name=accuracy,proto3" json:"accuracy,omitempty"`
	AreaMode    int32   `protobuf:"varint,5,opt,name=area_mode,json=areaMode,proto3" json:"area_mode,omitempty"`
	CountryCode int32   `protobuf:"varint,6,opt,name=country_code,json=countryCode,proto3" json:"country_code,omitempty"`
	LangCode    int32   `protobuf:"varint,7,opt,name=lang_code,json=langCode,proto3" json:"lang_code,omitempty"`
}

func (x *LocationInfo) Reset() {
	*x = LocationInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_request_base_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LocationInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocationInfo) ProtoMessage() {}

func (x *LocationInfo) ProtoReflect() protoreflect.Message {
	mi := &file_request_base_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocationInfo.ProtoReflect.Descriptor instead.
func (*LocationInfo) Descriptor() ([]byte, []int) {
	return file_request_base_proto_rawDescGZIP(), []int{2}
}

func (x *LocationInfo) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *LocationInfo) GetLatitude() float32 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *LocationInfo) GetLongitude() float32 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *LocationInfo) GetAccuracy() float64 {
	if x != nil {
		return x.Accuracy
	}
	return 0
}

func (x *LocationInfo) GetAreaMode() int32 {
	if x != nil {
		return x.AreaMode
	}
	return 0
}

func (x *LocationInfo) GetCountryCode() int32 {
	if x != nil {
		return x.CountryCode
	}
	return 0
}

func (x *LocationInfo) GetLangCode() int32 {
	if x != nil {
		return x.LangCode
	}
	return 0
}

type NetworkInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NetworkMode int32  `protobuf:"varint,1,opt,name=network_mode,json=networkMode,proto3" json:"network_mode,omitempty"`
	MobileIsp   int32  `protobuf:"varint,2,opt,name=mobile_isp,json=mobileIsp,proto3" json:"mobile_isp,omitempty"`
	Ip          string `protobuf:"bytes,3,opt,name=ip,proto3" json:"ip,omitempty"`
	BssId       string `protobuf:"bytes,4,opt,name=bss_id,json=bssId,proto3" json:"bss_id,omitempty"`
	EthMac      string `protobuf:"bytes,5,opt,name=eth_mac,json=ethMac,proto3" json:"eth_mac,omitempty"`
	WifiMac     string `protobuf:"bytes,6,opt,name=wifi_mac,json=wifiMac,proto3" json:"wifi_mac,omitempty"`
	Ipv4        string `protobuf:"bytes,7,opt,name=ipv4,proto3" json:"ipv4,omitempty"`
	Ipv6        string `protobuf:"bytes,8,opt,name=ipv6,proto3" json:"ipv6,omitempty"`
	Mcc         int32  `protobuf:"varint,9,opt,name=mcc,proto3" json:"mcc,omitempty"`
}

func (x *NetworkInfo) Reset() {
	*x = NetworkInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_request_base_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetworkInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkInfo) ProtoMessage() {}

func (x *NetworkInfo) ProtoReflect() protoreflect.Message {
	mi := &file_request_base_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkInfo.ProtoReflect.Descriptor instead.
func (*NetworkInfo) Descriptor() ([]byte, []int) {
	return file_request_base_proto_rawDescGZIP(), []int{3}
}

func (x *NetworkInfo) GetNetworkMode() int32 {
	if x != nil {
		return x.NetworkMode
	}
	return 0
}

func (x *NetworkInfo) GetMobileIsp() int32 {
	if x != nil {
		return x.MobileIsp
	}
	return 0
}

func (x *NetworkInfo) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *NetworkInfo) GetBssId() string {
	if x != nil {
		return x.BssId
	}
	return ""
}

func (x *NetworkInfo) GetEthMac() string {
	if x != nil {
		return x.EthMac
	}
	return ""
}

func (x *NetworkInfo) GetWifiMac() string {
	if x != nil {
		return x.WifiMac
	}
	return ""
}

func (x *NetworkInfo) GetIpv4() string {
	if x != nil {
		return x.Ipv4
	}
	return ""
}

func (x *NetworkInfo) GetIpv6() string {
	if x != nil {
		return x.Ipv6
	}
	return ""
}

func (x *NetworkInfo) GetMcc() int32 {
	if x != nil {
		return x.Mcc
	}
	return 0
}

type VersionInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VersionName      string `protobuf:"bytes,1,opt,name=version_name,json=versionName,proto3" json:"version_name,omitempty"`
	VersionCode      string `protobuf:"bytes,2,opt,name=version_code,json=versionCode,proto3" json:"version_code,omitempty"`
	Platform         int32  `protobuf:"varint,3,opt,name=platform,proto3" json:"platform,omitempty"`
	PlatformVersion  string `protobuf:"bytes,4,opt,name=platform_version,json=platformVersion,proto3" json:"platform_version,omitempty"`
	ChannelId        string `protobuf:"bytes,6,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	AppId            string `protobuf:"bytes,7,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	VnviewPkgVersion int32  `protobuf:"varint,8,opt,name=vnview_pkg_version,json=vnviewPkgVersion,proto3" json:"vnview_pkg_version,omitempty"`
}

func (x *VersionInfo) Reset() {
	*x = VersionInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_request_base_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VersionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VersionInfo) ProtoMessage() {}

func (x *VersionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_request_base_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VersionInfo.ProtoReflect.Descriptor instead.
func (*VersionInfo) Descriptor() ([]byte, []int) {
	return file_request_base_proto_rawDescGZIP(), []int{4}
}

func (x *VersionInfo) GetVersionName() string {
	if x != nil {
		return x.VersionName
	}
	return ""
}

func (x *VersionInfo) GetVersionCode() string {
	if x != nil {
		return x.VersionCode
	}
	return ""
}

func (x *VersionInfo) GetPlatform() int32 {
	if x != nil {
		return x.Platform
	}
	return 0
}

func (x *VersionInfo) GetPlatformVersion() string {
	if x != nil {
		return x.PlatformVersion
	}
	return ""
}

func (x *VersionInfo) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *VersionInfo) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *VersionInfo) GetVnviewPkgVersion() int32 {
	if x != nil {
		return x.VnviewPkgVersion
	}
	return 0
}

type PortraitInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key       string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	ValueInfo []string `protobuf:"bytes,2,rep,name=value_info,json=valueInfo,proto3" json:"value_info,omitempty"`
}

func (x *PortraitInfo) Reset() {
	*x = PortraitInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_request_base_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PortraitInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PortraitInfo) ProtoMessage() {}

func (x *PortraitInfo) ProtoReflect() protoreflect.Message {
	mi := &file_request_base_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PortraitInfo.ProtoReflect.Descriptor instead.
func (*PortraitInfo) Descriptor() ([]byte, []int) {
	return file_request_base_proto_rawDescGZIP(), []int{5}
}

func (x *PortraitInfo) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *PortraitInfo) GetValueInfo() []string {
	if x != nil {
		return x.ValueInfo
	}
	return nil
}

type DeviceInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ScreenWidth         int32      `protobuf:"varint,1,opt,name=screen_width,json=screenWidth,proto3" json:"screen_width,omitempty"`
	ScreenHeight        int32      `protobuf:"varint,2,opt,name=screen_height,json=screenHeight,proto3" json:"screen_height,omitempty"`
	DensityDpi          int32      `protobuf:"varint,3,opt,name=density_dpi,json=densityDpi,proto3" json:"density_dpi,omitempty"`
	Imei                string     `protobuf:"bytes,4,opt,name=imei,proto3" json:"imei,omitempty"`
	Imsi                string     `protobuf:"bytes,5,opt,name=imsi,proto3" json:"imsi,omitempty"`
	Idfa                string     `protobuf:"bytes,6,opt,name=idfa,proto3" json:"idfa,omitempty"`
	OmgId               string     `protobuf:"bytes,7,opt,name=omg_id,json=omgId,proto3" json:"omg_id,omitempty"`
	DeviceId            string     `protobuf:"bytes,8,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	DeviceModel         string     `protobuf:"bytes,9,opt,name=device_model,json=deviceModel,proto3" json:"device_model,omitempty"`
	DeviceType          int32      `protobuf:"varint,10,opt,name=device_type,json=deviceType,proto3" json:"device_type,omitempty"`
	Guid                string     `protobuf:"bytes,11,opt,name=guid,proto3" json:"guid,omitempty"`
	MaxUiSize           UISizeType `protobuf:"varint,12,opt,name=max_uiSize,json=maxUiSize,proto3,enum=QQTV.UISizeType" json:"max_uiSize,omitempty"`
	CurrentWindowUiSize UISizeType `protobuf:"varint,13,opt,name=current_window_uiSize,json=currentWindowUiSize,proto3,enum=QQTV.UISizeType" json:"current_window_uiSize,omitempty"`
	Manufacturer        string     `protobuf:"bytes,14,opt,name=manufacturer,proto3" json:"manufacturer,omitempty"`
	Qimei               string     `protobuf:"bytes,15,opt,name=qimei,proto3" json:"qimei,omitempty"`
	LocalIdfa           string     `protobuf:"bytes,16,opt,name=localIdfa,proto3" json:"localIdfa,omitempty"`
}

func (x *DeviceInfo) Reset() {
	*x = DeviceInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_request_base_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceInfo) ProtoMessage() {}

func (x *DeviceInfo) ProtoReflect() protoreflect.Message {
	mi := &file_request_base_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceInfo.ProtoReflect.Descriptor instead.
func (*DeviceInfo) Descriptor() ([]byte, []int) {
	return file_request_base_proto_rawDescGZIP(), []int{6}
}

func (x *DeviceInfo) GetScreenWidth() int32 {
	if x != nil {
		return x.ScreenWidth
	}
	return 0
}

func (x *DeviceInfo) GetScreenHeight() int32 {
	if x != nil {
		return x.ScreenHeight
	}
	return 0
}

func (x *DeviceInfo) GetDensityDpi() int32 {
	if x != nil {
		return x.DensityDpi
	}
	return 0
}

func (x *DeviceInfo) GetImei() string {
	if x != nil {
		return x.Imei
	}
	return ""
}

func (x *DeviceInfo) GetImsi() string {
	if x != nil {
		return x.Imsi
	}
	return ""
}

func (x *DeviceInfo) GetIdfa() string {
	if x != nil {
		return x.Idfa
	}
	return ""
}

func (x *DeviceInfo) GetOmgId() string {
	if x != nil {
		return x.OmgId
	}
	return ""
}

func (x *DeviceInfo) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *DeviceInfo) GetDeviceModel() string {
	if x != nil {
		return x.DeviceModel
	}
	return ""
}

func (x *DeviceInfo) GetDeviceType() int32 {
	if x != nil {
		return x.DeviceType
	}
	return 0
}

func (x *DeviceInfo) GetGuid() string {
	if x != nil {
		return x.Guid
	}
	return ""
}

func (x *DeviceInfo) GetMaxUiSize() UISizeType {
	if x != nil {
		return x.MaxUiSize
	}
	return UISizeType_UISizeType_REGULAR
}

func (x *DeviceInfo) GetCurrentWindowUiSize() UISizeType {
	if x != nil {
		return x.CurrentWindowUiSize
	}
	return UISizeType_UISizeType_REGULAR
}

func (x *DeviceInfo) GetManufacturer() string {
	if x != nil {
		return x.Manufacturer
	}
	return ""
}

func (x *DeviceInfo) GetQimei() string {
	if x != nil {
		return x.Qimei
	}
	return ""
}

func (x *DeviceInfo) GetLocalIdfa() string {
	if x != nil {
		return x.LocalIdfa
	}
	return ""
}

type FlagInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CheckFlag     int32 `protobuf:"varint,1,opt,name=check_flag,json=checkFlag,proto3" json:"check_flag,omitempty"`
	DebugFlag     int32 `protobuf:"varint,2,opt,name=debug_flag,json=debugFlag,proto3" json:"debug_flag,omitempty"`
	AutoRetryFlag int32 `protobuf:"varint,3,opt,name=auto_retry_flag,json=autoRetryFlag,proto3" json:"auto_retry_flag,omitempty"`
	NeedRetryFlag int32 `protobuf:"varint,4,opt,name=need_retry_flag,json=needRetryFlag,proto3" json:"need_retry_flag,omitempty"`
}

func (x *FlagInfo) Reset() {
	*x = FlagInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_request_base_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FlagInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlagInfo) ProtoMessage() {}

func (x *FlagInfo) ProtoReflect() protoreflect.Message {
	mi := &file_request_base_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlagInfo.ProtoReflect.Descriptor instead.
func (*FlagInfo) Descriptor() ([]byte, []int) {
	return file_request_base_proto_rawDescGZIP(), []int{7}
}

func (x *FlagInfo) GetCheckFlag() int32 {
	if x != nil {
		return x.CheckFlag
	}
	return 0
}

func (x *FlagInfo) GetDebugFlag() int32 {
	if x != nil {
		return x.DebugFlag
	}
	return 0
}

func (x *FlagInfo) GetAutoRetryFlag() int32 {
	if x != nil {
		return x.AutoRetryFlag
	}
	return 0
}

func (x *FlagInfo) GetNeedRetryFlag() int32 {
	if x != nil {
		return x.NeedRetryFlag
	}
	return 0
}

type UserStatusInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionCode   string `protobuf:"bytes,1,opt,name=session_code,json=sessionCode,proto3" json:"session_code,omitempty"`
	SpecialUser   int32  `protobuf:"varint,2,opt,name=special_user,json=specialUser,proto3" json:"special_user,omitempty"`
	Timestamp     int64  `protobuf:"varint,30,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	UserStatusKey string `protobuf:"bytes,3,opt,name=user_status_key,json=userStatusKey,proto3" json:"user_status_key,omitempty"`
	DyeFlag       int32  `protobuf:"varint,4,opt,name=dye_flag,json=dyeFlag,proto3" json:"dye_flag,omitempty"`
}

func (x *UserStatusInfo) Reset() {
	*x = UserStatusInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_request_base_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserStatusInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserStatusInfo) ProtoMessage() {}

func (x *UserStatusInfo) ProtoReflect() protoreflect.Message {
	mi := &file_request_base_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserStatusInfo.ProtoReflect.Descriptor instead.
func (*UserStatusInfo) Descriptor() ([]byte, []int) {
	return file_request_base_proto_rawDescGZIP(), []int{8}
}

func (x *UserStatusInfo) GetSessionCode() string {
	if x != nil {
		return x.SessionCode
	}
	return ""
}

func (x *UserStatusInfo) GetSpecialUser() int32 {
	if x != nil {
		return x.SpecialUser
	}
	return 0
}

func (x *UserStatusInfo) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *UserStatusInfo) GetUserStatusKey() string {
	if x != nil {
		return x.UserStatusKey
	}
	return ""
}

func (x *UserStatusInfo) GetDyeFlag() int32 {
	if x != nil {
		return x.DyeFlag
	}
	return 0
}

type OttInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Licence string `protobuf:"bytes,1,opt,name=licence,proto3" json:"licence,omitempty"`
	Qua     string `protobuf:"bytes,2,opt,name=qua,proto3" json:"qua,omitempty"`
	Qas     string `protobuf:"bytes,3,opt,name=qas,proto3" json:"qas,omitempty"`
}

func (x *OttInfo) Reset() {
	*x = OttInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_request_base_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OttInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OttInfo) ProtoMessage() {}

func (x *OttInfo) ProtoReflect() protoreflect.Message {
	mi := &file_request_base_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OttInfo.ProtoReflect.Descriptor instead.
func (*OttInfo) Descriptor() ([]byte, []int) {
	return file_request_base_proto_rawDescGZIP(), []int{9}
}

func (x *OttInfo) GetLicence() string {
	if x != nil {
		return x.Licence
	}
	return ""
}

func (x *OttInfo) GetQua() string {
	if x != nil {
		return x.Qua
	}
	return ""
}

func (x *OttInfo) GetQas() string {
	if x != nil {
		return x.Qas
	}
	return ""
}

type RequestHead struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId        int32             `protobuf:"varint,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	Callee           string            `protobuf:"bytes,2,opt,name=callee,proto3" json:"callee,omitempty"`
	Func             string            `protobuf:"bytes,3,opt,name=func,proto3" json:"func,omitempty"`
	SafeInfo         *SafeInfo         `protobuf:"bytes,4,opt,name=safe_info,json=safeInfo,proto3" json:"safe_info,omitempty"`
	LoginToken       []*LoginToken     `protobuf:"bytes,5,rep,name=login_token,json=loginToken,proto3" json:"login_token,omitempty"`
	DeviceInfo       *DeviceInfo       `protobuf:"bytes,6,opt,name=device_info,json=deviceInfo,proto3" json:"device_info,omitempty"`
	VersionInfo      *VersionInfo      `protobuf:"bytes,7,opt,name=version_info,json=versionInfo,proto3" json:"version_info,omitempty"`
	NetworkInfo      *NetworkInfo      `protobuf:"bytes,8,opt,name=network_info,json=networkInfo,proto3" json:"network_info,omitempty"`
	LocationInfo     *LocationInfo     `protobuf:"bytes,9,opt,name=location_info,json=locationInfo,proto3" json:"location_info,omitempty"`
	FlagInfo         *FlagInfo         `protobuf:"bytes,10,opt,name=flag_info,json=flagInfo,proto3" json:"flag_info,omitempty"`
	BucketInfo       *BucketInfo       `protobuf:"bytes,11,opt,name=bucket_info,json=bucketInfo,proto3" json:"bucket_info,omitempty"`
	PortraitInfo     []*PortraitInfo   `protobuf:"bytes,12,rep,name=portrait_info,json=portraitInfo,proto3" json:"portrait_info,omitempty"`
	UniqueId         string            `protobuf:"bytes,13,opt,name=unique_id,json=uniqueId,proto3" json:"unique_id,omitempty"`
	UserStatusInfo   *UserStatusInfo   `protobuf:"bytes,14,opt,name=user_status_info,json=userStatusInfo,proto3" json:"user_status_info,omitempty"`
	ExtraRequestHead map[string]string `protobuf:"bytes,15,rep,name=extra_request_head,json=extraRequestHead,proto3" json:"extra_request_head,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Cookie           map[string]string `protobuf:"bytes,16,rep,name=cookie,proto3" json:"cookie,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	OttInfo          *OttInfo          `protobuf:"bytes,17,opt,name=ott_info,json=ottInfo,proto3" json:"ott_info,omitempty"`
	EnvInfo          *EnvInfo          `protobuf:"bytes,18,opt,name=env_info,json=envInfo,proto3" json:"env_info,omitempty"`
}

func (x *RequestHead) Reset() {
	*x = RequestHead{}
	if protoimpl.UnsafeEnabled {
		mi := &file_request_base_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestHead) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestHead) ProtoMessage() {}

func (x *RequestHead) ProtoReflect() protoreflect.Message {
	mi := &file_request_base_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestHead.ProtoReflect.Descriptor instead.
func (*RequestHead) Descriptor() ([]byte, []int) {
	return file_request_base_proto_rawDescGZIP(), []int{10}
}

func (x *RequestHead) GetRequestId() int32 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

func (x *RequestHead) GetCallee() string {
	if x != nil {
		return x.Callee
	}
	return ""
}

func (x *RequestHead) GetFunc() string {
	if x != nil {
		return x.Func
	}
	return ""
}

func (x *RequestHead) GetSafeInfo() *SafeInfo {
	if x != nil {
		return x.SafeInfo
	}
	return nil
}

func (x *RequestHead) GetLoginToken() []*LoginToken {
	if x != nil {
		return x.LoginToken
	}
	return nil
}

func (x *RequestHead) GetDeviceInfo() *DeviceInfo {
	if x != nil {
		return x.DeviceInfo
	}
	return nil
}

func (x *RequestHead) GetVersionInfo() *VersionInfo {
	if x != nil {
		return x.VersionInfo
	}
	return nil
}

func (x *RequestHead) GetNetworkInfo() *NetworkInfo {
	if x != nil {
		return x.NetworkInfo
	}
	return nil
}

func (x *RequestHead) GetLocationInfo() *LocationInfo {
	if x != nil {
		return x.LocationInfo
	}
	return nil
}

func (x *RequestHead) GetFlagInfo() *FlagInfo {
	if x != nil {
		return x.FlagInfo
	}
	return nil
}

func (x *RequestHead) GetBucketInfo() *BucketInfo {
	if x != nil {
		return x.BucketInfo
	}
	return nil
}

func (x *RequestHead) GetPortraitInfo() []*PortraitInfo {
	if x != nil {
		return x.PortraitInfo
	}
	return nil
}

func (x *RequestHead) GetUniqueId() string {
	if x != nil {
		return x.UniqueId
	}
	return ""
}

func (x *RequestHead) GetUserStatusInfo() *UserStatusInfo {
	if x != nil {
		return x.UserStatusInfo
	}
	return nil
}

func (x *RequestHead) GetExtraRequestHead() map[string]string {
	if x != nil {
		return x.ExtraRequestHead
	}
	return nil
}

func (x *RequestHead) GetCookie() map[string]string {
	if x != nil {
		return x.Cookie
	}
	return nil
}

func (x *RequestHead) GetOttInfo() *OttInfo {
	if x != nil {
		return x.OttInfo
	}
	return nil
}

func (x *RequestHead) GetEnvInfo() *EnvInfo {
	if x != nil {
		return x.EnvInfo
	}
	return nil
}

type ResponseHead struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId        int32             `protobuf:"varint,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	Callee           string            `protobuf:"bytes,2,opt,name=callee,proto3" json:"callee,omitempty"`
	Func             string            `protobuf:"bytes,3,opt,name=func,proto3" json:"func,omitempty"`
	ErrCode          int32             `protobuf:"varint,4,opt,name=err_code,json=errCode,proto3" json:"err_code,omitempty"`
	SafeInfo         *SafeInfo         `protobuf:"bytes,5,opt,name=safe_info,json=safeInfo,proto3" json:"safe_info,omitempty"`
	FlagInfo         *FlagInfo         `protobuf:"bytes,6,opt,name=flag_info,json=flagInfo,proto3" json:"flag_info,omitempty"`
	PortraitInfo     []*PortraitInfo   `protobuf:"bytes,7,rep,name=portrait_info,json=portraitInfo,proto3" json:"portrait_info,omitempty"`
	UserStatusInfo   *UserStatusInfo   `protobuf:"bytes,8,opt,name=user_status_info,json=userStatusInfo,proto3" json:"user_status_info,omitempty"`
	ServerReportInfo *ServerReportInfo `protobuf:"bytes,9,opt,name=server_report_info,json=serverReportInfo,proto3" json:"server_report_info,omitempty"`
}

func (x *ResponseHead) Reset() {
	*x = ResponseHead{}
	if protoimpl.UnsafeEnabled {
		mi := &file_request_base_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseHead) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseHead) ProtoMessage() {}

func (x *ResponseHead) ProtoReflect() protoreflect.Message {
	mi := &file_request_base_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseHead.ProtoReflect.Descriptor instead.
func (*ResponseHead) Descriptor() ([]byte, []int) {
	return file_request_base_proto_rawDescGZIP(), []int{11}
}

func (x *ResponseHead) GetRequestId() int32 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

func (x *ResponseHead) GetCallee() string {
	if x != nil {
		return x.Callee
	}
	return ""
}

func (x *ResponseHead) GetFunc() string {
	if x != nil {
		return x.Func
	}
	return ""
}

func (x *ResponseHead) GetErrCode() int32 {
	if x != nil {
		return x.ErrCode
	}
	return 0
}

func (x *ResponseHead) GetSafeInfo() *SafeInfo {
	if x != nil {
		return x.SafeInfo
	}
	return nil
}

func (x *ResponseHead) GetFlagInfo() *FlagInfo {
	if x != nil {
		return x.FlagInfo
	}
	return nil
}

func (x *ResponseHead) GetPortraitInfo() []*PortraitInfo {
	if x != nil {
		return x.PortraitInfo
	}
	return nil
}

func (x *ResponseHead) GetUserStatusInfo() *UserStatusInfo {
	if x != nil {
		return x.UserStatusInfo
	}
	return nil
}

func (x *ResponseHead) GetServerReportInfo() *ServerReportInfo {
	if x != nil {
		return x.ServerReportInfo
	}
	return nil
}

type ServerReportInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerRspTime    int64    `protobuf:"varint,1,opt,name=server_rsp_time,json=serverRspTime,proto3" json:"server_rsp_time,omitempty"`
	DiscontentReason []string `protobuf:"bytes,2,rep,name=discontent_reason,json=discontentReason,proto3" json:"discontent_reason,omitempty"`
}

func (x *ServerReportInfo) Reset() {
	*x = ServerReportInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_request_base_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerReportInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerReportInfo) ProtoMessage() {}

func (x *ServerReportInfo) ProtoReflect() protoreflect.Message {
	mi := &file_request_base_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerReportInfo.ProtoReflect.Descriptor instead.
func (*ServerReportInfo) Descriptor() ([]byte, []int) {
	return file_request_base_proto_rawDescGZIP(), []int{12}
}

func (x *ServerReportInfo) GetServerRspTime() int64 {
	if x != nil {
		return x.ServerRspTime
	}
	return 0
}

func (x *ServerReportInfo) GetDiscontentReason() []string {
	if x != nil {
		return x.DiscontentReason
	}
	return nil
}

type BucketInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BucketId int32  `protobuf:"varint,1,opt,name=bucket_id,json=bucketId,proto3" json:"bucket_id,omitempty"`
	Extra    string `protobuf:"bytes,2,opt,name=extra,proto3" json:"extra,omitempty"`
}

func (x *BucketInfo) Reset() {
	*x = BucketInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_request_base_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BucketInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BucketInfo) ProtoMessage() {}

func (x *BucketInfo) ProtoReflect() protoreflect.Message {
	mi := &file_request_base_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BucketInfo.ProtoReflect.Descriptor instead.
func (*BucketInfo) Descriptor() ([]byte, []int) {
	return file_request_base_proto_rawDescGZIP(), []int{13}
}

func (x *BucketInfo) GetBucketId() int32 {
	if x != nil {
		return x.BucketId
	}
	return 0
}

func (x *BucketInfo) GetExtra() string {
	if x != nil {
		return x.Extra
	}
	return ""
}

var File_request_base_proto protoreflect.FileDescriptor

var file_request_base_proto_rawDesc = []byte{
	0x0a, 0x12, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x51, 0x51, 0x54, 0x56, 0x1a, 0x09, 0x65, 0x6e, 0x76, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x5a, 0x0a, 0x08, 0x53, 0x61, 0x66, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x61, 0x66, 0x65, 0x5f, 0x6b, 0x65,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x61, 0x66, 0x65, 0x4b, 0x65, 0x79,
	0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x61, 0x66, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x73, 0x61, 0x66, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x22, 0x8b, 0x01, 0x0a, 0x0a, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x22, 0x0a, 0x0d, 0x69,
	0x73, 0x5f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x4d, 0x61, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x22,
	0xd5, 0x01, 0x0a, 0x0c, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x61, 0x63, 0x63, 0x75, 0x72, 0x61, 0x63, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x08, 0x61, 0x63, 0x63, 0x75, 0x72, 0x61, 0x63, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x72,
	0x65, 0x61, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x61,
	0x72, 0x65, 0x61, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x72, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x61,
	0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6c,
	0x61, 0x6e, 0x67, 0x43, 0x6f, 0x64, 0x65, 0x22, 0xe4, 0x01, 0x0a, 0x0b, 0x4e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x6f,
	0x62, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x73, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x49, 0x73, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x12, 0x15, 0x0a, 0x06, 0x62, 0x73, 0x73,
	0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x62, 0x73, 0x73, 0x49, 0x64,
	0x12, 0x17, 0x0a, 0x07, 0x65, 0x74, 0x68, 0x5f, 0x6d, 0x61, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x65, 0x74, 0x68, 0x4d, 0x61, 0x63, 0x12, 0x19, 0x0a, 0x08, 0x77, 0x69, 0x66,
	0x69, 0x5f, 0x6d, 0x61, 0x63, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x77, 0x69, 0x66,
	0x69, 0x4d, 0x61, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x70, 0x76, 0x34, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x69, 0x70, 0x76, 0x34, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x70, 0x76, 0x36,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x70, 0x76, 0x36, 0x12, 0x10, 0x0a, 0x03,
	0x6d, 0x63, 0x63, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6d, 0x63, 0x63, 0x22, 0xfe,
	0x01, 0x0a, 0x0b, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x21,
	0x0a, 0x0c, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x21, 0x0a, 0x0c, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x12, 0x29, 0x0a, 0x10, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70,
	0x70, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49,
	0x64, 0x12, 0x2c, 0x0a, 0x12, 0x76, 0x6e, 0x76, 0x69, 0x65, 0x77, 0x5f, 0x70, 0x6b, 0x67, 0x5f,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x76,
	0x6e, 0x76, 0x69, 0x65, 0x77, 0x50, 0x6b, 0x67, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22,
	0x3f, 0x0a, 0x0c, 0x50, 0x6f, 0x72, 0x74, 0x72, 0x61, 0x69, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x22, 0x8c, 0x04, 0x0a, 0x0a, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x21, 0x0a, 0x0c, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x5f, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x57, 0x69, 0x64,
	0x74, 0x68, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x5f, 0x68, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x73, 0x63, 0x72, 0x65, 0x65,
	0x6e, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x65, 0x6e, 0x73, 0x69,
	0x74, 0x79, 0x5f, 0x64, 0x70, 0x69, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x64, 0x65,
	0x6e, 0x73, 0x69, 0x74, 0x79, 0x44, 0x70, 0x69, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x6d, 0x65, 0x69,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x6d, 0x65, 0x69, 0x12, 0x12, 0x0a, 0x04,
	0x69, 0x6d, 0x73, 0x69, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x6d, 0x73, 0x69,
	0x12, 0x12, 0x0a, 0x04, 0x69, 0x64, 0x66, 0x61, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x69, 0x64, 0x66, 0x61, 0x12, 0x15, 0x0a, 0x06, 0x6f, 0x6d, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x6d, 0x67, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x67, 0x75, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x67, 0x75, 0x69, 0x64,
	0x12, 0x2f, 0x0a, 0x0a, 0x6d, 0x61, 0x78, 0x5f, 0x75, 0x69, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x51, 0x51, 0x54, 0x56, 0x2e, 0x55, 0x49, 0x53, 0x69,
	0x7a, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x6d, 0x61, 0x78, 0x55, 0x69, 0x53, 0x69, 0x7a,
	0x65, 0x12, 0x44, 0x0a, 0x15, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x77, 0x69, 0x6e,
	0x64, 0x6f, 0x77, 0x5f, 0x75, 0x69, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x10, 0x2e, 0x51, 0x51, 0x54, 0x56, 0x2e, 0x55, 0x49, 0x53, 0x69, 0x7a, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x13, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x57, 0x69, 0x6e, 0x64, 0x6f,
	0x77, 0x55, 0x69, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x6d, 0x61, 0x6e, 0x75, 0x66,
	0x61, 0x63, 0x74, 0x75, 0x72, 0x65, 0x72, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6d,
	0x61, 0x6e, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75, 0x72, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x71,
	0x69, 0x6d, 0x65, 0x69, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x69, 0x6d, 0x65,
	0x69, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x49, 0x64, 0x66, 0x61, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x49, 0x64, 0x66, 0x61, 0x22,
	0x98, 0x01, 0x0a, 0x08, 0x46, 0x6c, 0x61, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x0a, 0x0a,
	0x63, 0x68, 0x65, 0x63, 0x6b, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x64,
	0x65, 0x62, 0x75, 0x67, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x64, 0x65, 0x62, 0x75, 0x67, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x26, 0x0a, 0x0f, 0x61, 0x75,
	0x74, 0x6f, 0x5f, 0x72, 0x65, 0x74, 0x72, 0x79, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0d, 0x61, 0x75, 0x74, 0x6f, 0x52, 0x65, 0x74, 0x72, 0x79, 0x46, 0x6c,
	0x61, 0x67, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x65, 0x64, 0x5f, 0x72, 0x65, 0x74, 0x72, 0x79,
	0x5f, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x6e, 0x65, 0x65,
	0x64, 0x52, 0x65, 0x74, 0x72, 0x79, 0x46, 0x6c, 0x61, 0x67, 0x22, 0xb7, 0x01, 0x0a, 0x0e, 0x55,
	0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x21, 0x0a,
	0x0c, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x21, 0x0a, 0x0c, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x5f, 0x75, 0x73, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x55,
	0x73, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x18, 0x1e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x12, 0x26, 0x0a, 0x0f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x5f, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x75, 0x73, 0x65, 0x72,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4b, 0x65, 0x79, 0x12, 0x19, 0x0a, 0x08, 0x64, 0x79, 0x65,
	0x5f, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x64, 0x79, 0x65,
	0x46, 0x6c, 0x61, 0x67, 0x22, 0x47, 0x0a, 0x07, 0x4f, 0x74, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x18, 0x0a, 0x07, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x71, 0x75, 0x61,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x71, 0x75, 0x61, 0x12, 0x10, 0x0a, 0x03, 0x71,
	0x61, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x71, 0x61, 0x73, 0x22, 0xe8, 0x07,
	0x0a, 0x0b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x63, 0x61, 0x6c, 0x6c, 0x65, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x61,
	0x6c, 0x6c, 0x65, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x75, 0x6e, 0x63, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x66, 0x75, 0x6e, 0x63, 0x12, 0x2b, 0x0a, 0x09, 0x73, 0x61, 0x66, 0x65,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x51, 0x51,
	0x54, 0x56, 0x2e, 0x53, 0x61, 0x66, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x73, 0x61, 0x66,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x31, 0x0a, 0x0b, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x51, 0x51, 0x54,
	0x56, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x0a, 0x6c, 0x6f,
	0x67, 0x69, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x31, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x51, 0x51, 0x54, 0x56, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x34, 0x0a, 0x0c, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x51, 0x51, 0x54, 0x56, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x34, 0x0a, 0x0c, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x51, 0x51, 0x54, 0x56, 0x2e, 0x4e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x6e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x37, 0x0a, 0x0d, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x51, 0x51, 0x54, 0x56, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x0c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x2b, 0x0a, 0x09, 0x66, 0x6c, 0x61, 0x67, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x51, 0x51, 0x54, 0x56, 0x2e, 0x46, 0x6c, 0x61, 0x67, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x08, 0x66, 0x6c, 0x61, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x31, 0x0a,
	0x0b, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x51, 0x51, 0x54, 0x56, 0x2e, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x37, 0x0a, 0x0d, 0x70, 0x6f, 0x72, 0x74, 0x72, 0x61, 0x69, 0x74, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x51, 0x51, 0x54, 0x56, 0x2e, 0x50,
	0x6f, 0x72, 0x74, 0x72, 0x61, 0x69, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x70, 0x6f, 0x72,
	0x74, 0x72, 0x61, 0x69, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x6e, 0x69,
	0x71, 0x75, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x6e,
	0x69, 0x71, 0x75, 0x65, 0x49, 0x64, 0x12, 0x3e, 0x0a, 0x10, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x51, 0x51, 0x54, 0x56, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x55, 0x0a, 0x12, 0x65, 0x78, 0x74, 0x72, 0x61, 0x5f,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x18, 0x0f, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x27, 0x2e, 0x51, 0x51, 0x54, 0x56, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x48, 0x65, 0x61, 0x64, 0x2e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x48, 0x65, 0x61, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x10, 0x65, 0x78, 0x74,
	0x72, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x35, 0x0a,
	0x06, 0x63, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x18, 0x10, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x51, 0x51, 0x54, 0x56, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x65, 0x61, 0x64,
	0x2e, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x63, 0x6f,
	0x6f, 0x6b, 0x69, 0x65, 0x12, 0x28, 0x0a, 0x08, 0x6f, 0x74, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x51, 0x51, 0x54, 0x56, 0x2e, 0x4f, 0x74,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x6f, 0x74, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x28,
	0x0a, 0x08, 0x65, 0x6e, 0x76, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x51, 0x51, 0x54, 0x56, 0x2e, 0x45, 0x6e, 0x76, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x07, 0x65, 0x6e, 0x76, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x43, 0x0a, 0x15, 0x45, 0x78, 0x74, 0x72,
	0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x65, 0x61, 0x64, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x39, 0x0a,
	0x0b, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x8d, 0x03, 0x0a, 0x0c, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x65, 0x61, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x61, 0x6c, 0x6c,
	0x65, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x66, 0x75, 0x6e, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x66, 0x75, 0x6e, 0x63, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x72, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x2b, 0x0a, 0x09, 0x73, 0x61, 0x66, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x51, 0x51, 0x54, 0x56, 0x2e, 0x53, 0x61, 0x66, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x08, 0x73, 0x61, 0x66, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2b, 0x0a, 0x09,
	0x66, 0x6c, 0x61, 0x67, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x51, 0x51, 0x54, 0x56, 0x2e, 0x46, 0x6c, 0x61, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x08, 0x66, 0x6c, 0x61, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x37, 0x0a, 0x0d, 0x70, 0x6f, 0x72,
	0x74, 0x72, 0x61, 0x69, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x51, 0x51, 0x54, 0x56, 0x2e, 0x50, 0x6f, 0x72, 0x74, 0x72, 0x61, 0x69, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x70, 0x6f, 0x72, 0x74, 0x72, 0x61, 0x69, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x3e, 0x0a, 0x10, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x51,
	0x51, 0x54, 0x56, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x44, 0x0a, 0x12, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x51, 0x51, 0x54, 0x56, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x10, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x67, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x26, 0x0a, 0x0f,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x72, 0x73, 0x70, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x73, 0x70,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x10, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x22, 0x3f, 0x0a, 0x0a, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x1b, 0x0a, 0x09, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x65, 0x78, 0x74, 0x72, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x78, 0x74,
	0x72, 0x61, 0x2a, 0x82, 0x01, 0x0a, 0x0a, 0x55, 0x49, 0x53, 0x69, 0x7a, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x16, 0x0a, 0x12, 0x55, 0x49, 0x53, 0x69, 0x7a, 0x65, 0x54, 0x79, 0x70, 0x65, 0x5f,
	0x52, 0x45, 0x47, 0x55, 0x4c, 0x41, 0x52, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x55, 0x49, 0x53,
	0x69, 0x7a, 0x65, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x4c, 0x41, 0x52, 0x47, 0x45, 0x10, 0x01, 0x12,
	0x13, 0x0a, 0x0f, 0x55, 0x49, 0x53, 0x69, 0x7a, 0x65, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x48, 0x55,
	0x47, 0x45, 0x10, 0x02, 0x12, 0x17, 0x0a, 0x13, 0x55, 0x49, 0x53, 0x69, 0x7a, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x5f, 0x4d, 0x41, 0x58, 0x49, 0x4d, 0x49, 0x5a, 0x45, 0x10, 0x03, 0x12, 0x18, 0x0a,
	0x14, 0x55, 0x49, 0x53, 0x69, 0x7a, 0x65, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x58, 0x4d, 0x41, 0x58,
	0x49, 0x4d, 0x49, 0x5a, 0x45, 0x10, 0x04, 0x42, 0x0c, 0x5a, 0x0a, 0x2e, 0x2e, 0x2f, 0x2e, 0x2e,
	0x2f, 0x51, 0x51, 0x54, 0x56, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_request_base_proto_rawDescOnce sync.Once
	file_request_base_proto_rawDescData = file_request_base_proto_rawDesc
)

func file_request_base_proto_rawDescGZIP() []byte {
	file_request_base_proto_rawDescOnce.Do(func() {
		file_request_base_proto_rawDescData = protoimpl.X.CompressGZIP(file_request_base_proto_rawDescData)
	})
	return file_request_base_proto_rawDescData
}

var file_request_base_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_request_base_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_request_base_proto_goTypes = []interface{}{
	(UISizeType)(0),          // 0: QQTV.UISizeType
	(*SafeInfo)(nil),         // 1: QQTV.SafeInfo
	(*LoginToken)(nil),       // 2: QQTV.LoginToken
	(*LocationInfo)(nil),     // 3: QQTV.LocationInfo
	(*NetworkInfo)(nil),      // 4: QQTV.NetworkInfo
	(*VersionInfo)(nil),      // 5: QQTV.VersionInfo
	(*PortraitInfo)(nil),     // 6: QQTV.PortraitInfo
	(*DeviceInfo)(nil),       // 7: QQTV.DeviceInfo
	(*FlagInfo)(nil),         // 8: QQTV.FlagInfo
	(*UserStatusInfo)(nil),   // 9: QQTV.UserStatusInfo
	(*OttInfo)(nil),          // 10: QQTV.OttInfo
	(*RequestHead)(nil),      // 11: QQTV.RequestHead
	(*ResponseHead)(nil),     // 12: QQTV.ResponseHead
	(*ServerReportInfo)(nil), // 13: QQTV.ServerReportInfo
	(*BucketInfo)(nil),       // 14: QQTV.BucketInfo
	nil,                      // 15: QQTV.RequestHead.ExtraRequestHeadEntry
	nil,                      // 16: QQTV.RequestHead.CookieEntry
	(*EnvInfo)(nil),          // 17: QQTV.EnvInfo
}
var file_request_base_proto_depIdxs = []int32{
	0,  // 0: QQTV.DeviceInfo.max_uiSize:type_name -> QQTV.UISizeType
	0,  // 1: QQTV.DeviceInfo.current_window_uiSize:type_name -> QQTV.UISizeType
	1,  // 2: QQTV.RequestHead.safe_info:type_name -> QQTV.SafeInfo
	2,  // 3: QQTV.RequestHead.login_token:type_name -> QQTV.LoginToken
	7,  // 4: QQTV.RequestHead.device_info:type_name -> QQTV.DeviceInfo
	5,  // 5: QQTV.RequestHead.version_info:type_name -> QQTV.VersionInfo
	4,  // 6: QQTV.RequestHead.network_info:type_name -> QQTV.NetworkInfo
	3,  // 7: QQTV.RequestHead.location_info:type_name -> QQTV.LocationInfo
	8,  // 8: QQTV.RequestHead.flag_info:type_name -> QQTV.FlagInfo
	14, // 9: QQTV.RequestHead.bucket_info:type_name -> QQTV.BucketInfo
	6,  // 10: QQTV.RequestHead.portrait_info:type_name -> QQTV.PortraitInfo
	9,  // 11: QQTV.RequestHead.user_status_info:type_name -> QQTV.UserStatusInfo
	15, // 12: QQTV.RequestHead.extra_request_head:type_name -> QQTV.RequestHead.ExtraRequestHeadEntry
	16, // 13: QQTV.RequestHead.cookie:type_name -> QQTV.RequestHead.CookieEntry
	10, // 14: QQTV.RequestHead.ott_info:type_name -> QQTV.OttInfo
	17, // 15: QQTV.RequestHead.env_info:type_name -> QQTV.EnvInfo
	1,  // 16: QQTV.ResponseHead.safe_info:type_name -> QQTV.SafeInfo
	8,  // 17: QQTV.ResponseHead.flag_info:type_name -> QQTV.FlagInfo
	6,  // 18: QQTV.ResponseHead.portrait_info:type_name -> QQTV.PortraitInfo
	9,  // 19: QQTV.ResponseHead.user_status_info:type_name -> QQTV.UserStatusInfo
	13, // 20: QQTV.ResponseHead.server_report_info:type_name -> QQTV.ServerReportInfo
	21, // [21:21] is the sub-list for method output_type
	21, // [21:21] is the sub-list for method input_type
	21, // [21:21] is the sub-list for extension type_name
	21, // [21:21] is the sub-list for extension extendee
	0,  // [0:21] is the sub-list for field type_name
}

func init() { file_request_base_proto_init() }
func file_request_base_proto_init() {
	if File_request_base_proto != nil {
		return
	}
	file_env_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_request_base_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SafeInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_request_base_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginToken); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_request_base_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LocationInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_request_base_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetworkInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_request_base_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VersionInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_request_base_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PortraitInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_request_base_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_request_base_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FlagInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_request_base_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserStatusInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_request_base_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OttInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_request_base_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestHead); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_request_base_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseHead); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_request_base_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerReportInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_request_base_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BucketInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_request_base_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_request_base_proto_goTypes,
		DependencyIndexes: file_request_base_proto_depIdxs,
		EnumInfos:         file_request_base_proto_enumTypes,
		MessageInfos:      file_request_base_proto_msgTypes,
	}.Build()
	File_request_base_proto = out.File
	file_request_base_proto_rawDesc = nil
	file_request_base_proto_goTypes = nil
	file_request_base_proto_depIdxs = nil
}
