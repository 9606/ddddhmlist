// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.21.4
// source: trpc_video_detail_list.proto

package QQTV

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DetailTabNextPlayModule int32

const (
	DetailTabNextPlayModule_MODULE_TAB       DetailTabNextPlayModule = 0
	DetailTabNextPlayModule_MODULE_RECOMMEND DetailTabNextPlayModule = 1
)

// Enum value maps for DetailTabNextPlayModule.
var (
	DetailTabNextPlayModule_name = map[int32]string{
		0: "MODULE_TAB",
		1: "MODULE_RECOMMEND",
	}
	DetailTabNextPlayModule_value = map[string]int32{
		"MODULE_TAB":       0,
		"MODULE_RECOMMEND": 1,
	}
)

func (x DetailTabNextPlayModule) Enum() *DetailTabNextPlayModule {
	p := new(DetailTabNextPlayModule)
	*p = x
	return p
}

func (x DetailTabNextPlayModule) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DetailTabNextPlayModule) Descriptor() protoreflect.EnumDescriptor {
	return file_trpc_video_detail_list_proto_enumTypes[0].Descriptor()
}

func (DetailTabNextPlayModule) Type() protoreflect.EnumType {
	return &file_trpc_video_detail_list_proto_enumTypes[0]
}

func (x DetailTabNextPlayModule) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DetailTabNextPlayModule.Descriptor instead.
func (DetailTabNextPlayModule) EnumDescriptor() ([]byte, []int) {
	return file_trpc_video_detail_list_proto_rawDescGZIP(), []int{0}
}

type DetailTabType int32

const (
	DetailTabType_TYPE_DETAIL DetailTabType = 0
	DetailTabType_TYPE_H5     DetailTabType = 1
	DetailTabType_TYPE_CLIPS  DetailTabType = 2
)

// Enum value maps for DetailTabType.
var (
	DetailTabType_name = map[int32]string{
		0: "TYPE_DETAIL",
		1: "TYPE_H5",
		2: "TYPE_CLIPS",
	}
	DetailTabType_value = map[string]int32{
		"TYPE_DETAIL": 0,
		"TYPE_H5":     1,
		"TYPE_CLIPS":  2,
	}
)

func (x DetailTabType) Enum() *DetailTabType {
	p := new(DetailTabType)
	*p = x
	return p
}

func (x DetailTabType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DetailTabType) Descriptor() protoreflect.EnumDescriptor {
	return file_trpc_video_detail_list_proto_enumTypes[1].Descriptor()
}

func (DetailTabType) Type() protoreflect.EnumType {
	return &file_trpc_video_detail_list_proto_enumTypes[1]
}

func (x DetailTabType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DetailTabType.Descriptor instead.
func (DetailTabType) EnumDescriptor() ([]byte, []int) {
	return file_trpc_video_detail_list_proto_rawDescGZIP(), []int{1}
}

type UserVipInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsVip      bool  `protobuf:"varint,1,opt,name=is_vip,json=isVip,proto3" json:"is_vip,omitempty"`
	VipEndTime int64 `protobuf:"varint,2,opt,name=vip_end_time,json=vipEndTime,proto3" json:"vip_end_time,omitempty"`
}

func (x *UserVipInfo) Reset() {
	*x = UserVipInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trpc_video_detail_list_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserVipInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserVipInfo) ProtoMessage() {}

func (x *UserVipInfo) ProtoReflect() protoreflect.Message {
	mi := &file_trpc_video_detail_list_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserVipInfo.ProtoReflect.Descriptor instead.
func (*UserVipInfo) Descriptor() ([]byte, []int) {
	return file_trpc_video_detail_list_proto_rawDescGZIP(), []int{0}
}

func (x *UserVipInfo) GetIsVip() bool {
	if x != nil {
		return x.IsVip
	}
	return false
}

func (x *UserVipInfo) GetVipEndTime() int64 {
	if x != nil {
		return x.VipEndTime
	}
	return 0
}

type DetailPageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vid         string       `protobuf:"bytes,1,opt,name=vid,proto3" json:"vid,omitempty"`
	Cid         string       `protobuf:"bytes,2,opt,name=cid,proto3" json:"cid,omitempty"`
	UserVipInfo *UserVipInfo `protobuf:"bytes,3,opt,name=user_vip_info,json=userVipInfo,proto3" json:"user_vip_info,omitempty"`
}

func (x *DetailPageReq) Reset() {
	*x = DetailPageReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trpc_video_detail_list_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DetailPageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetailPageReq) ProtoMessage() {}

func (x *DetailPageReq) ProtoReflect() protoreflect.Message {
	mi := &file_trpc_video_detail_list_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetailPageReq.ProtoReflect.Descriptor instead.
func (*DetailPageReq) Descriptor() ([]byte, []int) {
	return file_trpc_video_detail_list_proto_rawDescGZIP(), []int{1}
}

func (x *DetailPageReq) GetVid() string {
	if x != nil {
		return x.Vid
	}
	return ""
}

func (x *DetailPageReq) GetCid() string {
	if x != nil {
		return x.Cid
	}
	return ""
}

func (x *DetailPageReq) GetUserVipInfo() *UserVipInfo {
	if x != nil {
		return x.UserVipInfo
	}
	return nil
}

type DetailPageRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BasicInfo        *VideoDetailBasicInfo `protobuf:"bytes,1,opt,name=basic_info,json=basicInfo,proto3" json:"basic_info,omitempty"`
	FeedList         []*ChannelFeedItem    `protobuf:"bytes,2,rep,name=feed_list,json=feedList,proto3" json:"feed_list,omitempty"`
	ExperimentInfo   []*ExperimentInfo     `protobuf:"bytes,3,rep,name=experiment_info,json=experimentInfo,proto3" json:"experiment_info,omitempty"`
	NextPageInfo     *NextPageInfo         `protobuf:"bytes,4,opt,name=next_page_info,json=nextPageInfo,proto3" json:"next_page_info,omitempty"`
	TabList          []*DetailTabItem      `protobuf:"bytes,5,rep,name=tab_list,json=tabList,proto3" json:"tab_list,omitempty"`
	TabSelectedIndex int32                 `protobuf:"varint,6,opt,name=tab_selected_index,json=tabSelectedIndex,proto3" json:"tab_selected_index,omitempty"`
	VipBanner        *FeedVIPPrBanner      `protobuf:"bytes,7,opt,name=vip_banner,json=vipBanner,proto3" json:"vip_banner,omitempty"`
}

func (x *DetailPageRsp) Reset() {
	*x = DetailPageRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trpc_video_detail_list_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DetailPageRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetailPageRsp) ProtoMessage() {}

func (x *DetailPageRsp) ProtoReflect() protoreflect.Message {
	mi := &file_trpc_video_detail_list_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetailPageRsp.ProtoReflect.Descriptor instead.
func (*DetailPageRsp) Descriptor() ([]byte, []int) {
	return file_trpc_video_detail_list_proto_rawDescGZIP(), []int{2}
}

func (x *DetailPageRsp) GetBasicInfo() *VideoDetailBasicInfo {
	if x != nil {
		return x.BasicInfo
	}
	return nil
}

func (x *DetailPageRsp) GetFeedList() []*ChannelFeedItem {
	if x != nil {
		return x.FeedList
	}
	return nil
}

func (x *DetailPageRsp) GetExperimentInfo() []*ExperimentInfo {
	if x != nil {
		return x.ExperimentInfo
	}
	return nil
}

func (x *DetailPageRsp) GetNextPageInfo() *NextPageInfo {
	if x != nil {
		return x.NextPageInfo
	}
	return nil
}

func (x *DetailPageRsp) GetTabList() []*DetailTabItem {
	if x != nil {
		return x.TabList
	}
	return nil
}

func (x *DetailPageRsp) GetTabSelectedIndex() int32 {
	if x != nil {
		return x.TabSelectedIndex
	}
	return 0
}

func (x *DetailPageRsp) GetVipBanner() *FeedVIPPrBanner {
	if x != nil {
		return x.VipBanner
	}
	return nil
}

type DetailTabItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TabId          string                  `protobuf:"bytes,1,opt,name=tab_id,json=tabId,proto3" json:"tab_id,omitempty"`
	TabName        string                  `protobuf:"bytes,2,opt,name=tab_name,json=tabName,proto3" json:"tab_name,omitempty"`
	TabType        DetailTabType           `protobuf:"varint,3,opt,name=tab_type,json=tabType,proto3,enum=QQTV.DetailTabType" json:"tab_type,omitempty"`
	TabValue       string                  `protobuf:"bytes,4,opt,name=tab_value,json=tabValue,proto3" json:"tab_value,omitempty"`
	NextPlayModule DetailTabNextPlayModule `protobuf:"varint,5,opt,name=next_play_module,json=nextPlayModule,proto3,enum=QQTV.DetailTabNextPlayModule" json:"next_play_module,omitempty"`
}

func (x *DetailTabItem) Reset() {
	*x = DetailTabItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trpc_video_detail_list_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DetailTabItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetailTabItem) ProtoMessage() {}

func (x *DetailTabItem) ProtoReflect() protoreflect.Message {
	mi := &file_trpc_video_detail_list_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetailTabItem.ProtoReflect.Descriptor instead.
func (*DetailTabItem) Descriptor() ([]byte, []int) {
	return file_trpc_video_detail_list_proto_rawDescGZIP(), []int{3}
}

func (x *DetailTabItem) GetTabId() string {
	if x != nil {
		return x.TabId
	}
	return ""
}

func (x *DetailTabItem) GetTabName() string {
	if x != nil {
		return x.TabName
	}
	return ""
}

func (x *DetailTabItem) GetTabType() DetailTabType {
	if x != nil {
		return x.TabType
	}
	return DetailTabType_TYPE_DETAIL
}

func (x *DetailTabItem) GetTabValue() string {
	if x != nil {
		return x.TabValue
	}
	return ""
}

func (x *DetailTabItem) GetNextPlayModule() DetailTabNextPlayModule {
	if x != nil {
		return x.NextPlayModule
	}
	return DetailTabNextPlayModule_MODULE_TAB
}

type AlbumInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cid string `protobuf:"bytes,1,opt,name=cid,proto3" json:"cid,omitempty"`
}

func (x *AlbumInfoReq) Reset() {
	*x = AlbumInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trpc_video_detail_list_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlbumInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlbumInfoReq) ProtoMessage() {}

func (x *AlbumInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_trpc_video_detail_list_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlbumInfoReq.ProtoReflect.Descriptor instead.
func (*AlbumInfoReq) Descriptor() ([]byte, []int) {
	return file_trpc_video_detail_list_proto_rawDescGZIP(), []int{4}
}

func (x *AlbumInfoReq) GetCid() string {
	if x != nil {
		return x.Cid
	}
	return ""
}

type AlbumInfoRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AlbumDataInfo *AlbumDataInfo `protobuf:"bytes,1,opt,name=album_data_info,json=albumDataInfo,proto3" json:"album_data_info,omitempty"`
}

func (x *AlbumInfoRsp) Reset() {
	*x = AlbumInfoRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trpc_video_detail_list_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlbumInfoRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlbumInfoRsp) ProtoMessage() {}

func (x *AlbumInfoRsp) ProtoReflect() protoreflect.Message {
	mi := &file_trpc_video_detail_list_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlbumInfoRsp.ProtoReflect.Descriptor instead.
func (*AlbumInfoRsp) Descriptor() ([]byte, []int) {
	return file_trpc_video_detail_list_proto_rawDescGZIP(), []int{5}
}

func (x *AlbumInfoRsp) GetAlbumDataInfo() *AlbumDataInfo {
	if x != nil {
		return x.AlbumDataInfo
	}
	return nil
}

type DetailMoreListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataKey     string `protobuf:"bytes,1,opt,name=data_key,json=dataKey,proto3" json:"data_key,omitempty"`
	PageContext string `protobuf:"bytes,2,opt,name=page_context,json=pageContext,proto3" json:"page_context,omitempty"`
}

func (x *DetailMoreListReq) Reset() {
	*x = DetailMoreListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trpc_video_detail_list_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DetailMoreListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetailMoreListReq) ProtoMessage() {}

func (x *DetailMoreListReq) ProtoReflect() protoreflect.Message {
	mi := &file_trpc_video_detail_list_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetailMoreListReq.ProtoReflect.Descriptor instead.
func (*DetailMoreListReq) Descriptor() ([]byte, []int) {
	return file_trpc_video_detail_list_proto_rawDescGZIP(), []int{6}
}

func (x *DetailMoreListReq) GetDataKey() string {
	if x != nil {
		return x.DataKey
	}
	return ""
}

func (x *DetailMoreListReq) GetPageContext() string {
	if x != nil {
		return x.PageContext
	}
	return ""
}

type DetailMoreListRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FeedList     []*ChannelFeedItem `protobuf:"bytes,1,rep,name=feed_list,json=feedList,proto3" json:"feed_list,omitempty"`
	NextPageInfo *NextPageInfo      `protobuf:"bytes,2,opt,name=next_page_info,json=nextPageInfo,proto3" json:"next_page_info,omitempty"`
}

func (x *DetailMoreListRsp) Reset() {
	*x = DetailMoreListRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trpc_video_detail_list_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DetailMoreListRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetailMoreListRsp) ProtoMessage() {}

func (x *DetailMoreListRsp) ProtoReflect() protoreflect.Message {
	mi := &file_trpc_video_detail_list_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetailMoreListRsp.ProtoReflect.Descriptor instead.
func (*DetailMoreListRsp) Descriptor() ([]byte, []int) {
	return file_trpc_video_detail_list_proto_rawDescGZIP(), []int{7}
}

func (x *DetailMoreListRsp) GetFeedList() []*ChannelFeedItem {
	if x != nil {
		return x.FeedList
	}
	return nil
}

func (x *DetailMoreListRsp) GetNextPageInfo() *NextPageInfo {
	if x != nil {
		return x.NextPageInfo
	}
	return nil
}

type DetailVideoListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataKey     string `protobuf:"bytes,1,opt,name=data_key,json=dataKey,proto3" json:"data_key,omitempty"`
	PageContext string `protobuf:"bytes,2,opt,name=page_context,json=pageContext,proto3" json:"page_context,omitempty"`
}

func (x *DetailVideoListReq) Reset() {
	*x = DetailVideoListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trpc_video_detail_list_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DetailVideoListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetailVideoListReq) ProtoMessage() {}

func (x *DetailVideoListReq) ProtoReflect() protoreflect.Message {
	mi := &file_trpc_video_detail_list_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetailVideoListReq.ProtoReflect.Descriptor instead.
func (*DetailVideoListReq) Descriptor() ([]byte, []int) {
	return file_trpc_video_detail_list_proto_rawDescGZIP(), []int{8}
}

func (x *DetailVideoListReq) GetDataKey() string {
	if x != nil {
		return x.DataKey
	}
	return ""
}

func (x *DetailVideoListReq) GetPageContext() string {
	if x != nil {
		return x.PageContext
	}
	return ""
}

type DetailVideoListRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VideoList    []*VideoItemData `protobuf:"bytes,1,rep,name=video_list,json=videoList,proto3" json:"video_list,omitempty"`
	NextPageInfo *NextPageInfo    `protobuf:"bytes,2,opt,name=next_page_info,json=nextPageInfo,proto3" json:"next_page_info,omitempty"`
}

func (x *DetailVideoListRsp) Reset() {
	*x = DetailVideoListRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trpc_video_detail_list_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DetailVideoListRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetailVideoListRsp) ProtoMessage() {}

func (x *DetailVideoListRsp) ProtoReflect() protoreflect.Message {
	mi := &file_trpc_video_detail_list_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetailVideoListRsp.ProtoReflect.Descriptor instead.
func (*DetailVideoListRsp) Descriptor() ([]byte, []int) {
	return file_trpc_video_detail_list_proto_rawDescGZIP(), []int{9}
}

func (x *DetailVideoListRsp) GetVideoList() []*VideoItemData {
	if x != nil {
		return x.VideoList
	}
	return nil
}

func (x *DetailVideoListRsp) GetNextPageInfo() *NextPageInfo {
	if x != nil {
		return x.NextPageInfo
	}
	return nil
}

type AlbumListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DateKey     string `protobuf:"bytes,1,opt,name=date_key,json=dateKey,proto3" json:"date_key,omitempty"`
	PageContext string `protobuf:"bytes,2,opt,name=page_context,json=pageContext,proto3" json:"page_context,omitempty"`
}

func (x *AlbumListReq) Reset() {
	*x = AlbumListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trpc_video_detail_list_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlbumListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlbumListReq) ProtoMessage() {}

func (x *AlbumListReq) ProtoReflect() protoreflect.Message {
	mi := &file_trpc_video_detail_list_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlbumListReq.ProtoReflect.Descriptor instead.
func (*AlbumListReq) Descriptor() ([]byte, []int) {
	return file_trpc_video_detail_list_proto_rawDescGZIP(), []int{10}
}

func (x *AlbumListReq) GetDateKey() string {
	if x != nil {
		return x.DateKey
	}
	return ""
}

func (x *AlbumListReq) GetPageContext() string {
	if x != nil {
		return x.PageContext
	}
	return ""
}

type AlbumListRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AlbumDataInfo  []*AlbumDataInfo  `protobuf:"bytes,1,rep,name=album_data_info,json=albumDataInfo,proto3" json:"album_data_info,omitempty"`
	NextPageInfo   *NextPageInfo     `protobuf:"bytes,2,opt,name=next_page_info,json=nextPageInfo,proto3" json:"next_page_info,omitempty"`
	ExperimentInfo []*ExperimentInfo `protobuf:"bytes,3,rep,name=Experiment_info,json=ExperimentInfo,proto3" json:"Experiment_info,omitempty"`
}

func (x *AlbumListRsp) Reset() {
	*x = AlbumListRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trpc_video_detail_list_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlbumListRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlbumListRsp) ProtoMessage() {}

func (x *AlbumListRsp) ProtoReflect() protoreflect.Message {
	mi := &file_trpc_video_detail_list_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlbumListRsp.ProtoReflect.Descriptor instead.
func (*AlbumListRsp) Descriptor() ([]byte, []int) {
	return file_trpc_video_detail_list_proto_rawDescGZIP(), []int{11}
}

func (x *AlbumListRsp) GetAlbumDataInfo() []*AlbumDataInfo {
	if x != nil {
		return x.AlbumDataInfo
	}
	return nil
}

func (x *AlbumListRsp) GetNextPageInfo() *NextPageInfo {
	if x != nil {
		return x.NextPageInfo
	}
	return nil
}

func (x *AlbumListRsp) GetExperimentInfo() []*ExperimentInfo {
	if x != nil {
		return x.ExperimentInfo
	}
	return nil
}

var File_trpc_video_detail_list_proto protoreflect.FileDescriptor

var file_trpc_video_detail_list_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x74, 0x72, 0x70, 0x63, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x64, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04,
	0x51, 0x51, 0x54, 0x56, 0x1a, 0x10, 0x62, 0x61, 0x73, 0x69, 0x63, 0x5f, 0x64, 0x61, 0x74, 0x61,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0f, 0x66, 0x65, 0x65, 0x64, 0x5f, 0x64, 0x61, 0x74,
	0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x46, 0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x56,
	0x69, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x15, 0x0a, 0x06, 0x69, 0x73, 0x5f, 0x76, 0x69, 0x70,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x73, 0x56, 0x69, 0x70, 0x12, 0x20, 0x0a,
	0x0c, 0x76, 0x69, 0x70, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x76, 0x69, 0x70, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22,
	0x6a, 0x0a, 0x0d, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71,
	0x12, 0x10, 0x0a, 0x03, 0x76, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x76,
	0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x63, 0x69, 0x64, 0x12, 0x35, 0x0a, 0x0d, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x76, 0x69, 0x70,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x51, 0x51,
	0x54, 0x56, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x56, 0x69, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b,
	0x75, 0x73, 0x65, 0x72, 0x56, 0x69, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x8b, 0x03, 0x0a, 0x0d,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x50, 0x61, 0x67, 0x65, 0x52, 0x73, 0x70, 0x12, 0x39, 0x0a,
	0x0a, 0x62, 0x61, 0x73, 0x69, 0x63, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x51, 0x51, 0x54, 0x56, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x42, 0x61, 0x73, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x62,
	0x61, 0x73, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x32, 0x0a, 0x09, 0x66, 0x65, 0x65, 0x64,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x51, 0x51,
	0x54, 0x56, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x46, 0x65, 0x65, 0x64, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x08, 0x66, 0x65, 0x65, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x3d, 0x0a, 0x0f,
	0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x51, 0x51, 0x54, 0x56, 0x2e, 0x45, 0x78, 0x70,
	0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0e, 0x65, 0x78, 0x70,
	0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x38, 0x0a, 0x0e, 0x6e,
	0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x51, 0x51, 0x54, 0x56, 0x2e, 0x4e, 0x65, 0x78, 0x74, 0x50,
	0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2e, 0x0a, 0x08, 0x74, 0x61, 0x62, 0x5f, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x51, 0x51, 0x54, 0x56, 0x2e, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x54, 0x61, 0x62, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x07, 0x74, 0x61,
	0x62, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x74, 0x61, 0x62, 0x5f, 0x73, 0x65, 0x6c,
	0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x10, 0x74, 0x61, 0x62, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x12, 0x34, 0x0a, 0x0a, 0x76, 0x69, 0x70, 0x5f, 0x62, 0x61, 0x6e, 0x6e, 0x65,
	0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x51, 0x51, 0x54, 0x56, 0x2e, 0x46,
	0x65, 0x65, 0x64, 0x56, 0x49, 0x50, 0x50, 0x72, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x52, 0x09,
	0x76, 0x69, 0x70, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x22, 0xd7, 0x01, 0x0a, 0x0d, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x54, 0x61, 0x62, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x15, 0x0a, 0x06, 0x74,
	0x61, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x61, 0x62,
	0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x61, 0x62, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x61, 0x62, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2e, 0x0a,
	0x08, 0x74, 0x61, 0x62, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x13, 0x2e, 0x51, 0x51, 0x54, 0x56, 0x2e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x54, 0x61, 0x62,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x74, 0x61, 0x62, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x74, 0x61, 0x62, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x74, 0x61, 0x62, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x47, 0x0a, 0x10, 0x6e, 0x65,
	0x78, 0x74, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x51, 0x51, 0x54, 0x56, 0x2e, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x54, 0x61, 0x62, 0x4e, 0x65, 0x78, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x4d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x52, 0x0e, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x4d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x22, 0x20, 0x0a, 0x0c, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x63, 0x69, 0x64, 0x22, 0x4b, 0x0a, 0x0c, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x73, 0x70, 0x12, 0x3b, 0x0a, 0x0f, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x5f, 0x64,
	0x61, 0x74, 0x61, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x51, 0x51, 0x54, 0x56, 0x2e, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x0d, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x49, 0x6e,
	0x66, 0x6f, 0x22, 0x51, 0x0a, 0x11, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x4d, 0x6f, 0x72, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x5f,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x61, 0x74, 0x61, 0x4b,
	0x65, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x67, 0x65, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x78, 0x74, 0x22, 0x81, 0x01, 0x0a, 0x11, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x4d, 0x6f, 0x72, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x73, 0x70, 0x12, 0x32, 0x0a, 0x09, 0x66,
	0x65, 0x65, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x51, 0x51, 0x54, 0x56, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x46, 0x65, 0x65,
	0x64, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x08, 0x66, 0x65, 0x65, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x38, 0x0a, 0x0e, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x51, 0x51, 0x54, 0x56, 0x2e, 0x4e,
	0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x6e, 0x65, 0x78,
	0x74, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x52, 0x0a, 0x12, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12,
	0x19, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x64, 0x61, 0x74, 0x61, 0x4b, 0x65, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61,
	0x67, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x70, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x22, 0x82, 0x01,
	0x0a, 0x12, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x73, 0x70, 0x12, 0x32, 0x0a, 0x0a, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x51, 0x51, 0x54, 0x56, 0x2e,
	0x56, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x52, 0x09, 0x76,
	0x69, 0x64, 0x65, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x0e, 0x6e, 0x65, 0x78, 0x74,
	0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x51, 0x51, 0x54, 0x56, 0x2e, 0x4e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x22, 0x4c, 0x0a, 0x0c, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x21, 0x0a,
	0x0c, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74,
	0x22, 0xc4, 0x01, 0x0a, 0x0c, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x73,
	0x70, 0x12, 0x3b, 0x0a, 0x0f, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x51, 0x51, 0x54,
	0x56, 0x2e, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x0d, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x38,
	0x0a, 0x0e, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x51, 0x51, 0x54, 0x56, 0x2e, 0x4e, 0x65,
	0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x6e, 0x65, 0x78, 0x74,
	0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3d, 0x0a, 0x0f, 0x45, 0x78, 0x70, 0x65,
	0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x51, 0x51, 0x54, 0x56, 0x2e, 0x45, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d,
	0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0e, 0x45, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d,
	0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x2a, 0x3f, 0x0a, 0x17, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x54, 0x61, 0x62, 0x4e, 0x65, 0x78, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x4d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x0a, 0x4d, 0x4f, 0x44, 0x55, 0x4c, 0x45, 0x5f, 0x54, 0x41, 0x42,
	0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x4d, 0x4f, 0x44, 0x55, 0x4c, 0x45, 0x5f, 0x52, 0x45, 0x43,
	0x4f, 0x4d, 0x4d, 0x45, 0x4e, 0x44, 0x10, 0x01, 0x2a, 0x3d, 0x0a, 0x0d, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x54, 0x61, 0x62, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0f, 0x0a, 0x0b, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x44, 0x45, 0x54, 0x41, 0x49, 0x4c, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x48, 0x35, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x43, 0x4c, 0x49, 0x50, 0x53, 0x10, 0x02, 0x32, 0xc6, 0x02, 0x0a, 0x0b, 0x56, 0x69, 0x64, 0x65,
	0x6f, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x39, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x50, 0x61, 0x67, 0x65, 0x12, 0x13, 0x2e, 0x51, 0x51, 0x54, 0x56, 0x2e,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e,
	0x51, 0x51, 0x54, 0x56, 0x2e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x50, 0x61, 0x67, 0x65, 0x52,
	0x73, 0x70, 0x12, 0x36, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x12, 0x2e, 0x51, 0x51, 0x54, 0x56, 0x2e, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x51, 0x51, 0x54, 0x56, 0x2e, 0x41, 0x6c,
	0x62, 0x75, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x73, 0x70, 0x12, 0x42, 0x0a, 0x0e, 0x47, 0x65,
	0x74, 0x44, 0x65, 0x61, 0x74, 0x61, 0x69, 0x6c, 0x4d, 0x6f, 0x72, 0x65, 0x12, 0x17, 0x2e, 0x51,
	0x51, 0x54, 0x56, 0x2e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x4d, 0x6f, 0x72, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x51, 0x51, 0x54, 0x56, 0x2e, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x4d, 0x6f, 0x72, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x73, 0x70, 0x12, 0x48,
	0x0a, 0x12, 0x47, 0x65, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x56, 0x69, 0x64, 0x65, 0x6f,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x18, 0x2e, 0x51, 0x51, 0x54, 0x56, 0x2e, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x18,
	0x2e, 0x51, 0x51, 0x54, 0x56, 0x2e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x56, 0x69, 0x64, 0x65,
	0x6f, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x73, 0x70, 0x12, 0x36, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x41,
	0x6c, 0x62, 0x75, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x12, 0x2e, 0x51, 0x51, 0x54, 0x56, 0x2e,
	0x41, 0x6c, 0x62, 0x75, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x51,
	0x51, 0x54, 0x56, 0x2e, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x73, 0x70,
	0x42, 0x0c, 0x5a, 0x0a, 0x2e, 0x2e, 0x2f, 0x2e, 0x2e, 0x2f, 0x51, 0x51, 0x54, 0x56, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_trpc_video_detail_list_proto_rawDescOnce sync.Once
	file_trpc_video_detail_list_proto_rawDescData = file_trpc_video_detail_list_proto_rawDesc
)

func file_trpc_video_detail_list_proto_rawDescGZIP() []byte {
	file_trpc_video_detail_list_proto_rawDescOnce.Do(func() {
		file_trpc_video_detail_list_proto_rawDescData = protoimpl.X.CompressGZIP(file_trpc_video_detail_list_proto_rawDescData)
	})
	return file_trpc_video_detail_list_proto_rawDescData
}

var file_trpc_video_detail_list_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_trpc_video_detail_list_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_trpc_video_detail_list_proto_goTypes = []interface{}{
	(DetailTabNextPlayModule)(0), // 0: QQTV.DetailTabNextPlayModule
	(DetailTabType)(0),           // 1: QQTV.DetailTabType
	(*UserVipInfo)(nil),          // 2: QQTV.UserVipInfo
	(*DetailPageReq)(nil),        // 3: QQTV.DetailPageReq
	(*DetailPageRsp)(nil),        // 4: QQTV.DetailPageRsp
	(*DetailTabItem)(nil),        // 5: QQTV.DetailTabItem
	(*AlbumInfoReq)(nil),         // 6: QQTV.AlbumInfoReq
	(*AlbumInfoRsp)(nil),         // 7: QQTV.AlbumInfoRsp
	(*DetailMoreListReq)(nil),    // 8: QQTV.DetailMoreListReq
	(*DetailMoreListRsp)(nil),    // 9: QQTV.DetailMoreListRsp
	(*DetailVideoListReq)(nil),   // 10: QQTV.DetailVideoListReq
	(*DetailVideoListRsp)(nil),   // 11: QQTV.DetailVideoListRsp
	(*AlbumListReq)(nil),         // 12: QQTV.AlbumListReq
	(*AlbumListRsp)(nil),         // 13: QQTV.AlbumListRsp
	(*VideoDetailBasicInfo)(nil), // 14: QQTV.VideoDetailBasicInfo
	(*ChannelFeedItem)(nil),      // 15: QQTV.ChannelFeedItem
	(*ExperimentInfo)(nil),       // 16: QQTV.ExperimentInfo
	(*NextPageInfo)(nil),         // 17: QQTV.NextPageInfo
	(*FeedVIPPrBanner)(nil),      // 18: QQTV.FeedVIPPrBanner
	(*AlbumDataInfo)(nil),        // 19: QQTV.AlbumDataInfo
	(*VideoItemData)(nil),        // 20: QQTV.VideoItemData
}
var file_trpc_video_detail_list_proto_depIdxs = []int32{
	2,  // 0: QQTV.DetailPageReq.user_vip_info:type_name -> QQTV.UserVipInfo
	14, // 1: QQTV.DetailPageRsp.basic_info:type_name -> QQTV.VideoDetailBasicInfo
	15, // 2: QQTV.DetailPageRsp.feed_list:type_name -> QQTV.ChannelFeedItem
	16, // 3: QQTV.DetailPageRsp.experiment_info:type_name -> QQTV.ExperimentInfo
	17, // 4: QQTV.DetailPageRsp.next_page_info:type_name -> QQTV.NextPageInfo
	5,  // 5: QQTV.DetailPageRsp.tab_list:type_name -> QQTV.DetailTabItem
	18, // 6: QQTV.DetailPageRsp.vip_banner:type_name -> QQTV.FeedVIPPrBanner
	1,  // 7: QQTV.DetailTabItem.tab_type:type_name -> QQTV.DetailTabType
	0,  // 8: QQTV.DetailTabItem.next_play_module:type_name -> QQTV.DetailTabNextPlayModule
	19, // 9: QQTV.AlbumInfoRsp.album_data_info:type_name -> QQTV.AlbumDataInfo
	15, // 10: QQTV.DetailMoreListRsp.feed_list:type_name -> QQTV.ChannelFeedItem
	17, // 11: QQTV.DetailMoreListRsp.next_page_info:type_name -> QQTV.NextPageInfo
	20, // 12: QQTV.DetailVideoListRsp.video_list:type_name -> QQTV.VideoItemData
	17, // 13: QQTV.DetailVideoListRsp.next_page_info:type_name -> QQTV.NextPageInfo
	19, // 14: QQTV.AlbumListRsp.album_data_info:type_name -> QQTV.AlbumDataInfo
	17, // 15: QQTV.AlbumListRsp.next_page_info:type_name -> QQTV.NextPageInfo
	16, // 16: QQTV.AlbumListRsp.Experiment_info:type_name -> QQTV.ExperimentInfo
	3,  // 17: QQTV.VideoDetail.GetDetailPage:input_type -> QQTV.DetailPageReq
	6,  // 18: QQTV.VideoDetail.GetAlbumInfo:input_type -> QQTV.AlbumInfoReq
	8,  // 19: QQTV.VideoDetail.GetDeatailMore:input_type -> QQTV.DetailMoreListReq
	10, // 20: QQTV.VideoDetail.GetDetailVideoList:input_type -> QQTV.DetailVideoListReq
	12, // 21: QQTV.VideoDetail.GetAlbumList:input_type -> QQTV.AlbumListReq
	4,  // 22: QQTV.VideoDetail.GetDetailPage:output_type -> QQTV.DetailPageRsp
	7,  // 23: QQTV.VideoDetail.GetAlbumInfo:output_type -> QQTV.AlbumInfoRsp
	9,  // 24: QQTV.VideoDetail.GetDeatailMore:output_type -> QQTV.DetailMoreListRsp
	11, // 25: QQTV.VideoDetail.GetDetailVideoList:output_type -> QQTV.DetailVideoListRsp
	13, // 26: QQTV.VideoDetail.GetAlbumList:output_type -> QQTV.AlbumListRsp
	22, // [22:27] is the sub-list for method output_type
	17, // [17:22] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_trpc_video_detail_list_proto_init() }
func file_trpc_video_detail_list_proto_init() {
	if File_trpc_video_detail_list_proto != nil {
		return
	}
	file_basic_data_proto_init()
	file_feed_data_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_trpc_video_detail_list_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserVipInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trpc_video_detail_list_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DetailPageReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trpc_video_detail_list_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DetailPageRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trpc_video_detail_list_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DetailTabItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trpc_video_detail_list_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlbumInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trpc_video_detail_list_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlbumInfoRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trpc_video_detail_list_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DetailMoreListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trpc_video_detail_list_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DetailMoreListRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trpc_video_detail_list_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DetailVideoListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trpc_video_detail_list_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DetailVideoListRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trpc_video_detail_list_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlbumListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trpc_video_detail_list_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlbumListRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_trpc_video_detail_list_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_trpc_video_detail_list_proto_goTypes,
		DependencyIndexes: file_trpc_video_detail_list_proto_depIdxs,
		EnumInfos:         file_trpc_video_detail_list_proto_enumTypes,
		MessageInfos:      file_trpc_video_detail_list_proto_msgTypes,
	}.Build()
	File_trpc_video_detail_list_proto = out.File
	file_trpc_video_detail_list_proto_rawDesc = nil
	file_trpc_video_detail_list_proto_goTypes = nil
	file_trpc_video_detail_list_proto_depIdxs = nil
}
